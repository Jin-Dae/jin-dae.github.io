//https://www.acmicpc.net/problem/3986
//해설: 1.일단 좋은 단어이기 위한 최소한의 조건은 겹치는 부분(AA,BB)이 최소 하나 존재해야 함. (증명은 겹치는 것이 하나도 존재하지 않는데 좋은 단어라고 가정했을 때 같은 문자 두개를 어떻게 연결해도 그 사이가 홀수개가 돼서 모순이 생김.)
// 2.그러면 어떤 좋은 단어든 형태가 ...AA... 이거나 ...BB... 임. ...AA...의 형태만 따져도 일반성을 잃지 않으므로 이 경우만 따져보자.
// 그러면 AA가 서로 연결되는 경우와 서로 연결되지 않는 경우가 있다. 여기서 AA가 서로 연결되는 경우만 따져도 되는 것을 증명하자.(그리고 이 경우를 따질 때 스택을 사용한다.)
// 3. AA가 서로 연결되지 않았을 때 좋은 단어의 조건을 만족한다고 하자. 그러면 AA가 서로 연결됐을 때도 좋은 단어가 된다.(이것은 그림을 그리면 AA가 연결되는 다른 A와의 사이 덩어리가 자기들끼리 잘 연결되므로 AA를 서로 연결하고 AA와 연결된 다른 A,A를 연결하더라도 덩어리들이 갈라지지 않는다.)
// 4. 따라서 밴다이어그램을 그려볼 때 AA가 서로 연결되지 않았을 때 좋은 단어를 만족시키는 매칭들의 집합은 AA가 연결됐을 때 좋은 단어를 만족시키는 매칭들의 집합에 포함된다.
// 5. 따라서 AA가 서로 연결되는 경우만 따지면 그 외의 경우는 따질 필요가 없다.
#include<iostream>
#include<stack>
#include<cstring>
using namespace std;
int main(){
    int n,ans=0; cin>>n;
    while(n--){
        string a; cin>>a;
        stack<char> b; 
        for(int i=0;i<a.length();i++){
            if(!b.empty()&&b.top()==a[i]) b.pop();
            else b.push(a[i]);
        }
        if(b.empty()) ans++;
    }
    cout<<ans;
    return 0;
}